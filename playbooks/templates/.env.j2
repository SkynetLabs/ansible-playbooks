# Review usage (rename) in:
# - webportals.yml
# - hosts.ini
#
# REQUIRED: server_domain and portal_domain need to be defined by user
#
# NOTE: `| default(...)` alternates are for handling backwards compatibility.
{% set server_domain = ansible_host %}
{% set portal_domain = portal_domain | default(webportal_common_config.portal_cluster_domain) %}

###############################################################################
# Notes
#
# Portal server can be part of a single node cluster or a multi-node cluster.
#
# For single node cluster webportal_server_config.server_domain
# can be the same as webportal_common_config.portal_domain
#
# For multi-node cluster these should be different, portal_domain being the
# domain accessed publicly and server_domain(s) being address(es) behing a load
# balancer.
#
# Defaults are set in group_vars/webportals.yml
#
###############################################################################
# Server specific

{% if server_domain != portal_domain %}
# This is the domain that will be used for generating certificates and nginx
# routing for cluster server together with PORTAL_DOMAIN.
#
# REQUIRED if different from PORTAL_DOMAIN: See top of file
SERVER_DOMAIN={{ server_domain }}

{% endif %}
# Server UID to uniquelly identify the server. Used by Blocker module.
#
# REQUIRED: Manually defined by user, or Ansible automatically generated
SERVER_UID={{ webportal_server_config.server_uid }}

# Sia api password.
#
# REQUIRED: Manually defined by user, or Ansible automatically generated
SIA_API_PASSWORD={{ webportal_server_config.sia_api_password }}

# A list of active portal modules.
# Order in PORTAL_MODULES defines order of loading modules by docker compose.
# Possible choices:
# - 'a': Accounts (https://github.com/SkynetLabs/skynet-accounts)
# - 'b': Blocker (https://github.com/SkynetLabs/blocker)
# - 'j': Jaeger
# - 'm': MongoDB (when 'a' (i.e. Accounts) are used, this is included automatically)
# - 's': Malware Scanner (https://github.com/SkynetLabs/malware-scanner)
# - 'u': Abuse Scanner (https://github.com/SkynetLabs/abuse-scanner)
# - 'p': Pinner (https://github.com/SkynetLabs/pinner)
# Example:
# PORTAL_MODULES=mj
# or
# PORTAL_MODULES=aj
#
# REQUIRED: manually defined by user, default is mongo
PORTAL_MODULES={{ portal_modules | default(webportal_server_config.portal_modules) }}

# Block external traffic on skynet apis (also disables server in health-check module)
# Set to true if you want to block all traffic to skynet endpoints like skylink
# download and upload, registry read and write, handshake and dnslink access etc.
# Internal network traffic (ie. health-checks or curl requests running from this machine)
# will still be allowed. This is useful when you don't want to allow anyone to use your
# server as a skynet files gateway but you still want to be able to access non-skynet apis.
DENY_PUBLIC_ACCESS={{ deny_public_access | default(False) | string | lower }}

# Sia wallet password
#
# REQUIRED: Ansible automatically generated
SIA_WALLET_PASSWORD={{ webportal_server_config.sia_wallet_password if (webportal_server_config.sia_wallet_password is defined and webportal_server_config.sia_wallet_password is not none and webportal_server_config.sia_wallet_password != '') else (webportal_server_config.sia_wallet_seed if webportal_server_config.sia_wallet_seed is defined else '') }}

# The port on which siad is listening, defaults to 9980.
#
# REQUIRED: manually defined by user, or default will be used
API_PORT={{ webportal_server_config.sia_api_port }}

# Auto generated secure key for your Handshake service integration.
#
# REQUIRED: Ansible automatically generated
HSD_API_KEY={{ webportal_server_config.hsd_api_key }}

###############################################################################
# Common

# A (cluster) portal domain
# This is the domain that will be used for generating certificates and nginx
# routing.
#
# REQUIRED: See top of file
PORTAL_DOMAIN={{ portal_domain }}

# Administrator contact email.
# Needed for communication regarding SSL certification.
EMAIL_ADDRESS={{ ssl_support_email }}

# Used for AWS Route53 as a DNS loadbalancer.
#
# OPTIONAL: manually defined by user, can be blank if user is not using the AWS
# Route53 loadbalancer
AWS_ACCESS_KEY_ID={{ webportal_common_config.aws_access_key | default('') }}
AWS_SECRET_ACCESS_KEY={{ webportal_common_config.aws_secret_access_key | default('') }}

# Used for Discord notifications integration.
# Do not include DISCORD_MENTION_... vars if they are empty, health-checker.py
# script will stop working.
# TODO: Move those to common/cluster configs in LastPass
#
# OPTIONAL: manually defined by user
DISCORD_WEBHOOK_URL={{ discord_webhook_url | default('') }}
{% if discord_mention_role_id | default('') != '' %}
DISCORD_MENTION_ROLE_ID={{ discord_mention_role_id | default('') }}
{% endif %}
{% if discord_mention_user_id | default('') != '' %}
DISCORD_MENTION_USER_ID={{ discord_mention_user_id | default('') }}
{% endif %}

# S3 backup path.
#
# OPTIONAL: manually defined by user, can be blank
S3_BACKUP_PATH={{ webportal_common_config.s3_backup_path }}/{{ portal_cluster_id }}

# Used to load skylinks blocklist data from Airtable
#
# OPTIONAL: manually defined by user, can be blank
AIRTABLE_API_KEY={{ webportal_common_config.airtable_api_key | default('') }}
AIRTABLE_BASE={{ webportal_common_config.airtable_base | default('') }}
AIRTABLE_TABLE={{ webportal_common_config.airtable_table | default('') }}
AIRTABLE_FIELD={{ webportal_common_config.airtable_field | default('') }}

# Used to redirect traffic coming to account.<portal_domain> subdomain.
# Mentioned redirect will be active in two scenarios:
#   - whenever ACCOUNTS_REDIRECT_URL is specified - users will be redirected to configured URL
#   - when accounts module is disabled - if this variable is not configured, users will be 
#     redirected to PORTAL_DOMAIN by default.
ACCOUNTS_REDIRECT_URL={{ accounts_redirect_url | default('') }}
# The redirect above will use HTTP status code 302 by default (temporary redirect).
# You're free to configure it to meet your needs by setting the variable below.
ACCOUNTS_REDIRECT_STATUS_CODE={{ accounts_redirect_status_code | default('') }}

###############################################################################
# MongoDB

# MongoDB username
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_DB_USER={{ webportal_common_config.skynet_db_user }}

# MongoDB password
#
# REQUIRED: manually defined by user, or Ansible automatically generated
SKYNET_DB_PASS={{ webportal_common_config.skynet_db_pass }}

# MongoDB address or container name
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_DB_HOST={{ webportal_common_config.skynet_db_host }}

# MongoDB port
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_DB_PORT={{ webportal_common_config.skynet_db_port }}

# MongoDB replicaset name
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_DB_REPLICASET={{ webportal_common_config.skynet_db_replicaset }}

{% if portal_accounts_on %}
###############################################################################
# (optional) Accounts

# Absolute url to the (cluster) portal dashboard.
#
# REQUIRED: See top of file
SKYNET_DASHBOARD_URL=https://account.{{ portal_domain }}

# Accounts log level
#
# REQUIRED: manually defined by user, or default will be used
SKYNET_ACCOUNTS_LOG_LEVEL={{ webportal_common_config.accounts_log_level }}

{% if webportal_common_config.accounts_limit_access is defined %}
# Accounts limit access to authenticated users
# Possible values:
# - 'authenticated': Only authenticated users can access the portal. This is
#   the default value set by skynet-webportal/docker-compose.accounts.yml if
#   this variable is empty or undefined.
# - 'false': All users incl. anonymous users can access the portal (access to portal is public)
# REQUIRED: manually defined by user, or default is set in docker-compose file
ACCOUNTS_LIMIT_ACCESS={{ webportal_common_config.accounts_limit_access | string | lower }}
{% endif %}

{% if webportal_common_config.accounts_limit_access | default('') | string | lower != 'false' %}
# Account Test account for health checks and integration tests.
#
# REQUIRED when ACCOUNTS_LIMIT_ACCESS is not 'false': manually defined by user.
# API key takes precedence over email and password. It is recommended.
# Email and password are deprecated in use for the health checks but are needed
# for generating the API key.
ACCOUNTS_TEST_USER_API_KEY={{ webportal_server_config.accounts_test_user_api_key }}
ACCOUNTS_TEST_USER_EMAIL={{ webportal_server_config.accounts_test_user_email }}
ACCOUNTS_TEST_USER_PASSWORD={{ webportal_server_config.accounts_test_user_password }}
{% endif %}

# Accounts email
# REQUIRED: manually defined by user
ACCOUNTS_EMAIL_URI={{ webportal_common_config.accounts_email_uri }}

# Domain to which your cookies will be issued
#
# REQUIRED: See top of file
COOKIE_DOMAIN={{ portal_domain }}

# Cookie hashing secret, at least 32 bytes
#
# REQUIRED: manually defined by user, or Ansible automatically generated
COOKIE_HASH_KEY={{ webportal_common_config.cookie_hash_key }}

# Cookie encryption key, at least 32 bytes
#
# REQUIRED: manually defined by user, or Ansible automatically generated
COOKIE_ENC_KEY={{ webportal_common_config.cookie_enc_key }}

# Stripe keys and a secret
#
# OPTIONAL: manually defined by user, can be blank
STRIPE_PUBLISHABLE_KEY={{ webportal_common_config.stripe_publishable_key | default('') }}
STRIPE_API_KEY={{ webportal_common_config.stripe_api_key | default('') }}
STRIPE_SECRET_KEY={{ webportal_common_config.stripe_secret_key | default('') }}
STRIPE_WEBHOOK_SECRET={{ webportal_common_config.stripe_webhook_secret | default('') }}

{% endif %}
{% if portal_blocker_on %}
###############################################################################
# (optional) Blocker

# REQUIRED: Hardcoded, not configurable
API_HOST=10.10.10.10
SKYNET_ACCOUNTS_HOST=10.10.10.70
SKYNET_ACCOUNTS_PORT=3000

# REQUIRED: manually defined by user, or default will be used
BLOCKER_LOG_LEVEL={{ webportal_common_config.blocker_log_level }}

# List of portal urls from which to sync the blocklist periodically
#
# OPTIONAL: manually defined by user
BLOCKER_PORTALS_SYNC={{ webportal_common_config.blocker_portals_sync | default('') }}

# The following environment variables have been removed from the blocker but are
# kept here to preserve backwards compatibility.
#
# OPTIONAL: manually defined by user
BLOCKER_NGINX_CACHE_PURGE_LOCK={{ webportal_common_config.blocker_nginx_cache_purge_lock | default('') }}
BLOCKER_NGINX_CACHE_PURGE_LIST={{ webportal_common_config.blocker_nginx_cache_purge_list | default('') }}

{% endif %}
{% if portal_abuse_scanner_on %}
###############################################################################
# (optional) Abuse Scanner

# Email address to scan
#
# REQUIRED: manually defined by user
EMAIL_SERVER={{ webportal_common_config.abuse_email_server }}
EMAIL_USERNAME={{ webportal_common_config.abuse_email_username }}
EMAIL_PASSWORD={{ webportal_common_config.abuse_email_password }}

# Email address to send reports to
#
# REQUIRED: manually defined by user
ABUSE_MAILADDRESS={{ webportal_common_config.abuse_mailaddress }}

# Name of the mailbox to scan for reports
#
# REQUIRED: manually defined by user
ABUSE_MAILBOX={{ webportal_common_config.abuse_mailbox }}

# REQUIRED: manually defined by user or default will be used
ABUSE_LOG_LEVEL={{ webportal_common_config.abuse_log_level }}

# URL of the portal
#
# REQUIRED: manually defined by user
ABUSE_PORTAL_URL={{ webportal_common_config.abuse_portal_url }}

# REQUIRED: Hardcoded, not configurable
ABUSE_SPONSOR="Abuse Scanner"

# Reporting related environment variables
#
# OPTIONAL: manually defined by user, defaults to false
ABUSE_NCMEC_REPORTING_ENABLED={{
webportal_common_config.abuse_ncmec_reporting_enabled }}
#
# REQUIRED: manually defined by user, only if reporting is enabled
{% if webportal_common_config.abuse_ncmec_reporting_enabled %}
NCMEC_USERNAME={{ webportal_common_config.ncmec_username }}
NCMEC_PASSWORD={{ webportal_common_config.ncmec_password }}
NCMEC_DEBUG={{ webportal_common_config.ncmec_debug | default(True) }}

NCMEC_REPORTER_FIRSTNAME={{ webportal_common_config.ncmec_reporter_firstname }}
NCMEC_REPORTER_LASTNAME={{ webportal_common_config.ncmec_reporter_lastname }}
NCMEC_REPORTER_EMAIL={{ webportal_common_config.ncmec_reporter_email }}

{% endif %}
{% endif %}

{% if portal_pinner_on %}
# OPTIONAL:
PINNER_LOG_LEVEL={{ webportal_common_config.pinner_log_level | default('info')}}
{% endif %}
# TODO: Add serverlist script vars
# TODO: Once serverlist vars are added to this template update
# x-portals-setup-serverlist.yml not to check mark, but var name(s)
