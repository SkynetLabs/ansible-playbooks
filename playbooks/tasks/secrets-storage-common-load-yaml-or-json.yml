---
# Load yaml or json record from secrets storage to Ansible variable

# This tasks is supposed to be called (included) in a loop with list of
# dictionaries defining secret_path and var_name.
# Example:
#
# - name: Include loading secret data
#   include_tasks: tasks/secrets-storage-common-vault-load-yaml-or-json.yml
#   loop:
#     - secret_path: "Shared-Data/abc.yml"
#       var_name: abc
#     - secret_path: "Shared-Data/other-var.json"
#       var_name: some_other_var_name
#
# Value of `secret_path` must end either with `.yml` or with `.json` otherwise
# the task can't determine the secure note format and fails the playbook.

# Output:
# This task sets output variable (var_name) value according to the data from
# the given secrets storage path (secret_path).
#
# - If the given path doesn't exists in secrets storage,
#   the output variable is not defined.
# - If the record at the given path in secrets storage is empty
#   the ouptput variable is empty dictionary, i.e. {}.
# - Otherwise yaml or json data (based on secret_path extension) from record
#   are loaded into output variable.

- name: Set secret path extension
  set_fact:
    secret_path_extension: "{{ item.secret_path.split('.') | last }}"

- name: Assert we can determine record format
  ansible.builtin.assert:
    that:
      - secret_path_extension == 'yml' or secret_path_extension == 'json'
    fail_msg: |
      Loading secrets storage records supports only notes with path ending with
      `.yml` or `.json`.

      Requested secrets storage record path:
      {{ item.secret_path }}

- name: Include getting secret data from secrets storage
  include_tasks: "tasks/secrets-storage-{{ secrets_storage }}-load-yaml-or-json.yml"
  loop:
    - secret_path: "{{ item.secret_path }}"
      var_name: "{{ item.var_name }}"
  loop_control:
    loop_var: "load_item"

- block:
    - name: Parse data from yaml or pass json
      set_fact:
        parsed_data: >-
          {{
            secrets_storage_data | from_yaml
            if secret_path_extension == 'yml'
            else secrets_storage_data
          }}

    - name: Set variable value from secrets storage data
      set_fact:
        "{{ item.var_name }}": "{{ {} if parsed_data == '' else parsed_data }}" # noqa var-naming
  when: secrets_storage_record_exists
