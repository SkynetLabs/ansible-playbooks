---
# Install latest sudo
- name: Install sudo
  apt:
    update_cache: true
    cache_valid_time: 3600 # 60 minutes
    state: latest
    name: sudo

# Create users with defined uid
- name: Create users with defined uid
  ansible.builtin.user:
    name: "{{ item.username }}"
    password: "{{ item.password_hash }}"
    gid: "item.gid"
    state: present
    shell: /bin/bash
    groups:
      - sudo
  # Below must be exact case: None (Python), none (Jinja test)
  when: item.gid | default(None) is not none
  loop: "{{ initial_users }}"
  no_log: True

# Create users without defined uid
- name: Create users without defined uid
  ansible.builtin.user:
    name: "{{ item.username }}"
    password: "{{ item.password_hash }}"
    state: present
    shell: /bin/bash
    groups:
      - sudo
  # Below must be exact case: None (Python), none (Jinja test)
  when: item.gid | default(None) is none
  loop: "{{ initial_users }}"
  no_log: True

# Remove temp user
- name: Remove temp user (when webportal user is active)
  ansible.builtin.user:
    name: "{{ webportal_temp_user }}"
    state: absent
    remove: yes
  when: ansible_user == webportal_user

# Stop the playbook to prevent locking the user out of the server access
- name: Fail if user hasn't defined public SSH keys to load to authorized_keys
  fail:
    msg: |
      Variable webportal_user_authorized_keys is not defined or is empty.
      You need to define user public SSH authorized keys otherwise you will
      lock yourself out of the server access.
  when: webportal_user_authorized_keys | default('') == ''

# Add SSH authorized keys
- name: Add SSH authorized keys
  ansible.posix.authorized_key:
    user: "{{ item.username }}"
    state: present
    key: "{{ item.authorized_keys }}"
  loop: "{{ initial_users }}"

# Basic security
- name: Include basic security setup
  include_role:
    name: geerlingguy.security
