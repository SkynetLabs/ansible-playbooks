---
# Take portal out of load balancer by stopping health check

# Check if the health check container is running.
- name: Check health check container is running
  community.docker.docker_container_info:
    name: health-check
  register: health_check_docker_container_result

# Marker the health check as disabled via the cli command
- name: Stop portal health check to take portal out of load balancer
  # NOTE: portal_action is defined by the playbook, i.e. for deploys,
  # portal_action='portal-deploy'
  command: 'docker exec health-check cli disable "{{ out_of_lb_message | default(portal_action) }}"'
  register: docker_health_check_disable_result
  # Only fail the task if there is an error reported to stderr, unless it
  # is that the container is restarting, since that means the health check isn't
  # active already.
  failed_when:
    - docker_health_check_disable_result.stderr != ''
    - docker_health_check_disable_result.stderr.find("restarting") == -1
  # Only execute the CLI command if the container is up and running. Otherwise,
  # if it is not up and running, it is practically disabled.
  when:
    - health_check_docker_container_result.exists
    - health_check_docker_container_result.container is defined
    - health_check_docker_container_result.container.State.Running

- name: Wait until renter is idle
  include_task: playbooks/tasks/portal-renter-wait-until-idle.yml
