---
# Set portal versions (portal, skyd, accounts)

- name: Read docker-compose.yml
  slurp:
    path: "{{ webportal_dir }}/docker-compose.yml"
  register: docker_compose_slurped

- name: Parse docker-compose.yml
  set_fact:
    docker_compose_data: "{{ docker_compose_slurped['content'] | b64decode | from_yaml }}"

- name: Fail if portal versions (portal, skyd, accounts) are not set correctly
  ansible.builtin.fail:
    msg: |
      Portal versions are not defined correctly.

      - portal_repo_version must be defined
        current value: {{ portal_repo_version | default('- not set -') }}

      - optionally one of (but not both)
          - portal_skyd_version
            current value: {{ portal_skyd_version | default('- not set -') }}

          - docker_image_overrides sia image override
            note: cannot be used on older codebase where 'sia' docker service defines 'build' property
            current value: {{ (docker_image_overrides is defined and (docker_image_overrides | selectattr('service', '==', 'sia') | first ).image) | default('- not set -') }}
        can be defined or both can be omitted.

      - optionally one of (but not both)
          - portal_accounts_version
            current value: {{ portal_accounts_version | default('- not set -') }}

          - portal_accounts_image_version
            current value: {{ portal_accounts_image_version | default('- not set -') }}
        can be defined or both can be omitted.
  when: >-
    portal_repo_version | default('') == ''
    or
    (
      (portal_skyd_version | default('') != '' or docker_compose_data.services.sia.build is defined)
      and
      (docker_image_overrides is defined and docker_image_overrides | selectattr('service', '==', 'sia') | length)
    )
    or
    (
      portal_accounts_version | default('') != ''
      and
      portal_accounts_image_version | default('') != ''
    )

- name: Checkout skynet-webportal repository
  ansible.builtin.git:
    repo: "{{ webportal_repo_url }}"
    dest: "{{ webportal_dir }}"
    version: "{{ portal_repo_version }}"
    update: True
    force: True

# Handle custom website dockerfile
#
# The custom website dockerfile can be defined in the following ways
#
# build:
#   context: https://github.com/SkynetLabs/skynet-webportal.git#master
#   dockerfile: ./packages/website/Dockerfile
#
# or
#
# build: https://github.com/user/website-repo.git#master

- name: Verify any defined custom website variables are defined as expected
  ansible.builtin.assert:
    that:
      - >-
        (website_custom_build is not defined and website_custom_build_context is not defined and website_custom_build_dockerfile is not defined) or
        (website_custom_build is defined and website_custom_build_context is not defined and website_custom_build_dockerfile is not defined) or
        (website_custom_build is not defined and website_custom_build_context is defined and website_custom_build_dockerfile is defined)
    fail_msg: |
      Either website_custom_build must be defined or
      website_custom_build_context and website_custom_build_dockerfile must be defined

- name: Set empty docker compose override data
  set_fact:
    docker_compose_override_data: { "version": "3.8" } # yamllint disable-line rule:braces

# Handle setting an docker image overrides
#
# Expected syntax
# docker_image_overrides:
#   - { service: "website", image: "skynetlabs/website-skynetpro-net" }
#   - { service: "blocker", image: "skynetlabs/blocker" }

- name: Set docker image overrides
  set_fact:
    # ignoring ansible-lint var-spacing here because it is a false failure
    # caused by the }}}}} in the combine statement
    docker_compose_override_data: "{{ docker_compose_override_data | combine({'services': {item.service: {'image': item.image, 'environment': item.environment | default([])}}}, recursive=True) }}" # noqa var-spacing
  loop: "{{ docker_image_overrides }}"
  # Do not set website docker image when website custom build/context/
  # dockerfile is defined
  when: >-
    docker_image_overrides is defined and
    (
      item.service != 'website'
      or
      (
        item.service == 'website'
        and not
        (
          website_custom_build is defined
          or
          website_custom_build_context is defined
          or
          website_custom_build_dockerfile is defined
        )
      )
    )

# Setting custom builds is below docker image overrides, so that default
# website images can be overriden by website custom builds.

- name: Set custom website Dockerfile build
  set_fact:
    # ignoring ansible-lint var-spacing here because it is a false failure
    # caused by the }}}}} in the combine statement
    docker_compose_override_data: "{{ docker_compose_override_data | combine({'services': {'website': {'build': website_custom_build}}}, recursive=True) }}" # noqa var-spacing
  when: website_custom_build is defined

- name: Set custom website Dockerfile build with context and dockerfile
  set_fact:
    # ignoring ansible-lint var-spacing here because it is a false failure
    # caused by the }}}}} in the combine statement
    docker_compose_override_data: "{{ docker_compose_override_data | combine({'services': {'website': {'build': {'context': website_custom_build_context, 'dockerfile': website_custom_build_dockerfile}}}}, recursive=True) }}" # noqa var-spacing
  when:
    - website_custom_build_context is defined
    - website_custom_build_dockerfile is defined

# Handle skyd. Skyd version can be set via skyd docker image in
# docker-compose.yml otherwise via branch in config.yml variable.

- name: >-
    Update skyd version in data variable (if branch variable is defined)
  set_fact:
    docker_compose_override_data: "{{ docker_compose_override_data | combine({'services': {'sia': {'build': {'context': docker_skyd_repo_url + '#main', 'dockerfile': 'scratch/Dockerfile', 'args': {'branch': portal_skyd_version} } }}}, recursive=True) }}" # noqa var-spacing
  when: portal_skyd_version | default('') != ''

# Handle accounts. Account version can be set via accounts docker image in
# docker-compose.accounts.yml otherwise via branch in config.yml variable.

- name: Include checking if accounts use docker image
  include_tasks: tasks/portal-docker-compose-accounts-check-image-is-used.yml

# We need to support this task file with and without LastPass
# accounts_on flag is set during deploys without needing LastPass
# portal_accounts_on flag is set during portal setup via loading portal config
# from LastPass

- name: Set accounts on flag for non-LastPass tasks
  set_fact:
    accounts_on: "{{ accounts_on | default(portal_accounts_on)}}"

- name: >-
    Update accounts version in data variable (if accounts are on and branch
    variable is defined)
  set_fact:
    docker_compose_override_data: "{{ docker_compose_override_data | combine({'services': {'accounts': {'build': accounts_repo_url + '#' + portal_accounts_version }}}, recursive=True) }}" # noqa var-spacing
  when: accounts_on and portal_accounts_version | default('') != ''

- name: >-
    Update accounts version in data variable (if accounts are on and image
    variable is defined)
  set_fact:
    docker_compose_override_data: "{{ docker_compose_override_data | combine({'services': {'accounts': {'image': portal_accounts_image_version | default (docker_compose_accounts_image) }}}, recursive=True) }}" # noqa var-spacing
  when: >-
    accounts_on
    and
    (
      portal_accounts_image_version | default('') != ''
      or
      docker_compose_accounts_image_is_used
    )

# Render docker-compose.override.yml with our data
- name: Save docker-compose.override.yml file
  ansible.builtin.template:
    src: templates/docker-compose.override.yml.j2
    dest: "{{ webportal_dir }}/docker-compose.override.yml"
