---
# Save webportal user credentials to plaintext

- name: Include checking plaintext secrets directory
  include_tasks: tasks/secrets-storage-plaintext-check-secrets-dir.yml

- name: Include checking if user credentials record exists in plaintext storage
  include_tasks: tasks/secrets-storage-plaintext-check-record-exists.yml
  vars:
    secret_path: "{{ plaintext_portal_credentials_server }}"

# Create and save webportal user credentials to plaintext storage (if missing)
- block:
    - name: Set webportal user password
      set_fact:
        ansible_become_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"

    - name: Ensure plaintext storage server credentials directory exists
      ansible.builtin.file:
        path: "{{ plaintext_base_dir }}/{{ plaintext_ansible_dir }}/{{ plaintext_portal_credentials_server_subfolder }}"
        state: directory
        owner: "{{ plaintext_secrets_uid }}"
        group: "{{ plaintext_secrets_gid }}"
        mode: "{{ plaintext_secrets_mode }}"
        follow: True
      delegate_to: localhost

    - name: Create user credentials record in plaintext secrets storage
      ansible.builtin.copy:
        content: |
          username: "{{ webportal_user }}"
          password: "{{ ansible_become_pass }}"
        dest: "{{ plaintext_base_dir }}/{{ plaintext_portal_credentials_server }}"
        owner: "{{ plaintext_secrets_uid }}"
        group: "{{ plaintext_secrets_gid }}"
        mode: "{{ plaintext_secrets_mode }}"
        directory_mode: "{{ plaintext_secrets_mode }}"
        follow: True
      delegate_to: localhost
      no_log: True

    - name: Remove execute permission from the user credentials record
      ansible.builtin.file:
        path: "{{ plaintext_base_dir }}/{{ plaintext_portal_credentials_server }}"
        mode: "-x"
        follow: True
      delegate_to: localhost
  when: not secrets_storage_record_exists
