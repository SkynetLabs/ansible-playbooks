- name: Get Deploy Hosts for the Current Batch
  hosts: webportals
  gather_facts: False

  # Limit concurrency to keep batch_hosts order deterministic.
  # When you want to deploy in parallel, keep 'serial: 1' for this play,
  # parallel deploys are set by 'serial' variable in the next play.
  serial: 1

  # Stop on first error, do not execute on the next host
  any_errors_fatal: True

  vars:
    max_hosts: "{{ groups['webportals'] | length - 1 }}"

    # Default batch config (one batch with all selected hosts will be created),
    # can be overriden with cli flag --extra-vars/-e
    batch_size: 1
    batch_number: 1

  tasks:
    # Check '--limit' is used
    - name: Fail if you are targeting all dev and prod webportals
      include_tasks: tasks/host-limit-check.yml

    - name: Filter hosts by batch size and batch number
      ansible.builtin.group_by:
        key: batch_hosts
      # add hosts according to batch size and batch number
      when: ansible_play_hosts_all.index(inventory_hostname) % batch_size == batch_number - 1

- name: Deploy Skynet Webportals to Current Batch Hosts
  hosts: batch_hosts
  remote_user: "{{ webportal_user }}"
  gather_facts: False

  # Limit concurrency
  serial: "{{ parallel_executions | default(1) }}"

  # Stop on first error, do not execute on the next host
  any_errors_fatal: True

  # Playbook specific vars
  vars:
    # Rebuild docker services
    docker_compose_build: True
    # Set portal, skyd, accounts versions
    set_portal_versions: True
    portal_action: "portal-deploy"

  tasks:
    - name: Including deploying portal
      include_tasks: tasks/portal-deploy.yml
